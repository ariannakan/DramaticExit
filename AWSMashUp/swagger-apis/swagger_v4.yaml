---
swagger: "2.0"
info:
  description: MashUpApp
  version: 1.0.0
  title: MashUpAPI
  contact:
    email: gr-cs3733dramaticExit@wpi.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: virtserver.swaggerhub.com
basePath: /cs3733DramaticExit9/MashUpAPI/1.0.0
tags:
- name: admin
  description: Secured Admin-only calls
- name: user
  description: Operations available to regular participants
schemes:
- https
paths:
  /library/site:
    get:
      tags:
      - admin
      summary: get list of registered sites
      description: get list of registered sites
      operationId: getSitesList
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: list of registered sites returned
          schema:
            type: array
            items:
              $ref: '#/definitions/Site'
    post:
      tags:
      - admin
      summary: request to register new 3rd-party site
      description: request to register new 3rd-party site
      operationId: requestRegisterSite
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: url
        in: path
        description: ID of site registered
        required: true
        type: string
        format: uri
      responses:
        200:
          description: site registered
        400:
          description: invalid input, object invalid
        409:
          description: valid input but duplicate site
  /library/site/{url}:
    delete:
      tags:
      - admin
      summary: request to delete registered site
      description: request to delete registered site
      operationId: requestDeleteSite
      produces:
      - application/json
      parameters:
      - name: url
        in: path
        description: ID of site to fetch
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: site deleted
        400:
          description: invalid site
        409:
          description: unable to delete site
  /library/video:
    get:
      tags:
      - admin
      - user
      summary: get list of video segments in library
      description: get list of video segments in library
      operationId: getVideoList
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: list of videos returned
          schema:
            type: array
            items:
              $ref: '#/definitions/GetVideo'
    post:
      tags:
      - admin
      - user
      summary: request to upload new video in library
      description: request to upload new video in library
      operationId: requestUploadNewVideo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: video object that needs to be added to the library
        required: true
        schema:
          $ref: '#/definitions/UploadVideo'
      responses:
        200:
          description: video uploaded
        400:
          description: invalid input, object invalid
        409:
          description: valid input but duplicate video
  /library/video/{videoID}:
    put:
      tags:
      - admin
      summary: request to update video by ID (mark/unmark)
      description: request to update video by ID (mark/unmark)
      operationId: requestUpdateVideo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: videoID
        in: path
        description: ID of video that needs to be updated
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: video mark status updated
        400:
          description: invalid video
        409:
          description: unable to update video mark status
    delete:
      tags:
      - admin
      - user
      summary: request to delete video
      description: request to delete video
      operationId: requestDeleteVideo
      produces:
      - application/json
      parameters:
      - name: videoID
        in: path
        description: ID of video to delete
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: video deleted
        400:
          description: invalid video
        409:
          description: unable to delete video
  /library/video/search:
    post:
      tags:
      - admin
      - user
      summary: get a list of videos with search keyword
      description: get a list of videos with search keyword
      operationId: getVideoListfromSearch
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: keyword
        in: query
        description: keyword values that need to be considered for filter
        required: true
        type: string
      responses:
        200:
          description: list of videos returned
          schema:
            type: array
            items:
              $ref: '#/definitions/GetVideo'
  /library/playlist:
    get:
      tags:
      - user
      - admin
      summary: gets list of playlists in library
      description: gets list of playlists in library
      operationId: getPlaylistList
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: list of playlists returned
          schema:
            type: array
            items:
              $ref: '#/definitions/Playlist'
        400:
          description: bad input parameter
  /playlist:
    post:
      tags:
      - user
      - admin
      summary: request to create a playlist
      description: request to create a playlist
      operationId: requestCreatePlaylist
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: playlist that needs to be added to the library
        required: true
        schema:
          $ref: '#/definitions/Playlist'
      responses:
        200:
          description: playlist created
          schema:
            type: array
            items:
              $ref: '#/definitions/Playlist'
        400:
          description: playlist was not created
        409:
          description: unable to create playlist
  /playlist/{playlistID}:
    get:
      tags:
      - admin
      - user
      summary: get list of videos from playlist
      description: get list of videos from playlist
      operationId: getPlaylistVideosList
      produces:
      - application/json
      parameters:
      - name: playlistID
        in: path
        description: videos to filter by within Playlist
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: list of videos returned
          schema:
            type: array
            items:
              $ref: '#/definitions/GetVideo'
    post:
      tags:
      - admin
      - user
      summary: request to append video segment to playlist
      description: request to append video segment to playlist
      operationId: requestAppendVideo
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: playlistID
        in: path
        description: playlist to be modified
        required: true
        type: string
        format: uuid
      - in: body
        name: videoID
        description: video segment to be appended
        required: true
        schema:
          type: object
      responses:
        200:
          description: video appended to playlist
        400:
          description: invalid video
        409:
          description: unable to append video to playlist
    delete:
      tags:
      - admin
      - user
      summary: request to delete playlist
      description: request to delete playlist
      operationId: requestDeletePlaylist
      produces:
      - application/json
      parameters:
      - name: playlistID
        in: path
        description: ID of the playlist that needs to be deleted
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: playlist deleted
        400:
          description: invalid playlist
        409:
          description: unable to delete playlist
  /playlist/{playlistID}/video/{videoID}:
    delete:
      tags:
      - admin
      - user
      summary: request to delete video from playlist
      description: request to delete video from playlist
      operationId: requestDeleteVideofromPlaylist
      produces:
      - application/json
      parameters:
      - name: videoID
        in: path
        description: ID of the video that needs to be deleted from the playlist
        required: true
        type: string
        format: uuid
      - name: playlistID
        in: path
        description: ID of the playlist you want to modify
        required: true
        type: string
        format: uuid
      responses:
        200:
          description: video deleted
        400:
          description: invalid video
        409:
          description: unable to delete video
definitions:
  UploadVideo:
    type: object
    required:
    - availability
    - characterName
    - name
    - oggFile
    - sentence
    properties:
      name:
        type: string
      characterName:
        type: string
      sentence:
        type: string
      oggFile:
        type: string
      availability:
        type: boolean
  GetVideo:
    type: object
    required:
    - name
    properties:
      name:
        type: string
      characterName:
        type: string
      sentence:
        type: string
      availability:
        type: boolean
      identifier:
        type: string
        format: uuid
  Playlist:
    required:
    - name
    properties:
      name:
        type: string
        format: uuid
      videos:
        type: array
        items:
          $ref: '#/definitions/GetVideo'
  Site:
    required:
    - url
    properties:
      url:
        type: string
        format: uri
